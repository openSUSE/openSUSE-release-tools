---
format_version: 3
pipelines:
  ALP.IBS.Stagings.RelPkgs:
    environment_variables:
      OSC_CONFIG: /home/go/config/oscrc-staging-bot
    group: MicroOS
    lock_behavior: unlockWhenFinished
    timer:
      spec: 0 0 * ? * *
      only_on_changes: false
    materials:
      scripts:
        git: https://github.com/openSUSE/openSUSE-release-tools.git
    stages:
    - Generate.Release.Package:
        approval: manual
        jobs:
          ALP.IBS.Staging.A:
            resources:
              - repo-checker
            tasks:
              - script: ./pkglistgen.py -A https://api.suse.de update_and_solve
                  --staging SUSE:ALP:Products:Server:1.0:Staging:A
                  --only-release-packages --force
          ALP.IBS.Staging.B:
            resources:
              - repo-checker
            tasks:
              - script: ./pkglistgen.py -A https://api.suse.de update_and_solve
                  --staging SUSE:ALP:Products:Server:1.0:Staging:B
                  --only-release-packages --force

  ALP.IBS.Staging.A:
    environment_variables:
      STAGING_PROJECT: SUSE:ALP:Products:Server:1.0:Staging:A
      STAGING_API: https://api.suse.de
      OSC_CONFIG: /home/go/config/oscrc-staging-bot
    group: MicroOS
    lock_behavior: unlockWhenFinished
    materials:
      stagings:
        git: git://botmaster.suse.de/suse-repos.git
        auto_update: true
        destination: repos
        whitelist:
          - SUSE:ALP:Products:Server:1.0:Staging:A_-_standard.yaml
      scripts:
        auto_update: true
        git: https://github.com/openSUSE/openSUSE-release-tools.git
        whitelist:
          - DO_NOT_TRIGGER
        destination: scripts
    stages:
    - Checks:
        jobs:
          Check.Build.Succeeds:
            resources:
              - staging-bot
            tasks:
              - script: |-
                  export PYTHONPATH=$PWD/scripts
                  cd scripts/gocd
                  ./report-status.py -A $STAGING_API -p $STAGING_PROJECT -n packagelists -r standard -s pending
                  ./verify-repo-built-successful.py -A $STAGING_API -p $STAGING_PROJECT -r standard
          Repo.Checker:
            environment_variables:
              OSC_CONFIG: /home/go/config/oscrc-staging-bot
            resources:
              - repo-checker
            tasks:
              - script: ./scripts/staging-installcheck.py -A $STAGING_API -p SUSE:ALP:Products:Server:1.0 -s $STAGING_PROJECT
    - Update.000product:
        resources:
          - repo-checker
        tasks:
          - script: |-
              export PYTHONPATH=$PWD/scripts
              cd scripts/gocd

              if ../pkglistgen.py --debug -A $STAGING_API update_and_solve --staging $STAGING_PROJECT --force; then
                ./report-status.py -A $STAGING_API -p $STAGING_PROJECT -n packagelists -r standard -s success
              else
                ./report-status.py -A $STAGING_API -p $STAGING_PROJECT -n packagelists -r standard -s failure
                exit 1
              fi

    - Enable.images.repo:
        resources:
          - staging-bot
        tasks:
          - script: |-
              osc -A $STAGING_API api -X POST "/source/$STAGING_PROJECT?cmd=remove_flag&repository=images&flag=build"

  ALP.IBS.Staging.B:
    environment_variables:
      STAGING_PROJECT: SUSE:ALP:Products:Server:1.0:Staging:B
      STAGING_API: https://api.suse.de
      OSC_CONFIG: /home/go/config/oscrc-staging-bot
    group: MicroOS
    lock_behavior: unlockWhenFinished
    materials:
      stagings:
        git: git://botmaster.suse.de/suse-repos.git
        auto_update: true
        destination: repos
        whitelist:
          - SUSE:ALP:Products:Server:1.0:Staging:B_-_standard.yaml
      scripts:
        auto_update: true
        git: https://github.com/openSUSE/openSUSE-release-tools.git
        whitelist:
          - DO_NOT_TRIGGER
        destination: scripts
    stages:
    - Checks:
        jobs:
          Check.Build.Succeeds:
            resources:
              - staging-bot
            tasks:
              - script: |-
                  export PYTHONPATH=$PWD/scripts
                  cd scripts/gocd
                  ./report-status.py -A $STAGING_API -p $STAGING_PROJECT -n packagelists -r standard -s pending
                  ./verify-repo-built-successful.py -A $STAGING_API -p $STAGING_PROJECT -r standard
          Repo.Checker:
            environment_variables:
              OSC_CONFIG: /home/go/config/oscrc-staging-bot
            resources:
              - repo-checker
            tasks:
              - script: ./scripts/staging-installcheck.py -A $STAGING_API -p SUSE:ALP:Products:Server:1.0 -s $STAGING_PROJECT
    - Update.000product:
        resources:
          - repo-checker
        tasks:
          - script: |-
              export PYTHONPATH=$PWD/scripts
              cd scripts/gocd

              if ../pkglistgen.py --debug -A $STAGING_API update_and_solve --staging $STAGING_PROJECT --force; then
                ./report-status.py -A $STAGING_API -p $STAGING_PROJECT -n packagelists -r standard -s success
              else
                ./report-status.py -A $STAGING_API -p $STAGING_PROJECT -n packagelists -r standard -s failure
                exit 1
              fi

    - Enable.images.repo:
        resources:
          - staging-bot
        tasks:
          - script: |-
              osc -A $STAGING_API api -X POST "/source/$STAGING_PROJECT?cmd=remove_flag&repository=images&flag=build"
